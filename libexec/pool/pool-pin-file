#!/usr/bin/env node
// pool-pin-file -- upload and pin file using pinata
// Usage: pool pin-file <path>
const process = require('process');
const fs = require('fs');
const pinataSDK = require('@pinata/sdk');
const execSync = require('child_process').execSync;
const fetch = require('node-fetch');

const pinata = pinataSDK(process.env['PINATA_API_KEY'], process.env['PINATA_SECRET_KEY']);
if (process.argv.length < 3) {
  console.error("Missing file argument");
  process.exit(1);
}

const readableStreamForFile = fs.createReadStream(process.argv[2]);

const chain = execSync('seth chain').toString().slice(0,-1);
const registryAddr = execSync('pool --registry-address').toString().slice(0, -1);
const fileName = `${chain}-${registryAddr}-${process.argv[2]}`;

const options = {
    pinataMetadata: {
        name: fileName,
    },
    pinataOptions: {
        cidVersion: 0
    }
};

pinata.pinFileToIPFS(readableStreamForFile, options).then((result) => {
    console.log(result.IpfsHash);
    return fetch(`https://api.thegraph.com/ipfs/api/v0/pin/add?arg=${result.IpfsHash}`,
  { method:"POST" });
}).then(res => console.log(res)
).catch((err) => {
    console.err(err);
    process.exit(1);
});

